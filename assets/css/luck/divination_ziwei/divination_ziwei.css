body {

}

:root {
    --wrap-size: 300px; /* 外层容器大小 - loading data */
    --cube-size: 150px; /* 立方体大小 */
  }

.app_content {

    width: 1024px;
    height: 600px;
    position: relative;
    background: url('/image/luck/divination_ziwei/ai-generated-8404318_1920.png') no-repeat center center / cover;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
}


.app_slogan,
.form_user_birth_date,
.app_user_input.user_birth_time,
.app_user_input.user_gender_container,
.app_data_nav,
.app_data,
.zhong_gong_container,
.palace_index_info_container,
.app_data_loading {
    
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); 
    text-align: center;
}

.slogan_content_text {

    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: 2rem;
    margin: 2rem auto;
}

.form_user_birth_date {
    display: none;
    flex-direction: column;
    gap: 2rem;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0); 
    transition: transform 1s ease, opacity 1s ease;
}


.form_user_birth_date.active {
    transform: translate(-50%, -50%) scale(1); /* 保持居中，放大 */
    opacity: 1;
    display: flex;
}

.input_user_birth_date {
    min-width: 15rem;
    min-height: 3rem;
    border: 1px solid #ccc; /* 设置边框样式 */
    border-radius: 5px; /* 圆角边框 */
    background-color: #f9f9f9; /* 背景颜色 */
    color: #333; /* 文字颜色 */
    padding: 0.5rem;
}

.input_user_birth_date:focus {
    outline: none;
    border-color: #007bff; /* 点击时的边框颜色 */
    background-color: #fff; /* 点击时的背景颜色 */
}

.app_user_input.user_birth_time,
.app_data_nav {

    width: 95%;
    height: 95%;
    display: none;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0); 
    transition: transform 1.5s ease, opacity 1.5s ease;
    grid-gap: 0.5rem;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: 1fr;
    grid-template-areas:
        "g3 g4 g5 g6"
        "g2 ct ct g7"
        "g1 ct ct g8"
        "g0 g11 g10 g9";
}

.app_user_input.user_birth_time.active,
.app_data_nav.active {

    transform: translate(-50%, -50%) scale(1); /* 保持居中，放大 */
    opacity: 1;
    display: grid;
}

.user_birth_time_container_description {

    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 5rem;
    font-weight: 600;
}

.user_birth_time_container,
.nav_zhong_gong,
.nav_palace_index {

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    border: 2px solid blueviolet;
    border-radius: 5px;
    cursor: pointer;
    
}

.user_birth_time_container {

    transition: all 0.3s;
}

.user_birth_time_container:hover {

    background-color: #8A2BE2;
}


.app_user_input.user_gender {

    display: none;
    flex-direction: column;
    gap: 2rem;
    align-items: center;
    justify-content: center;
}

.app_user_input.user_gender .user_gender_container {

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2rem;
}

.app_user_input.user_gender .user_gender_container .user_gender_container_item {

    width: 100px;
    height: 200px;
    border: 1px solid blueviolet;
    border-radius: 5px;
}


.app_user_input.user_gender.active {

    transform: translate(-50%, -50%) scale(1); /* 保持居中，放大 */
    opacity: 1;
    display: flex;
}

.zhong_gong_container,
.palace_index_info_container {

    display: none;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0); 
    transition: transform 1.5s ease, opacity 1.5s ease;
}


.zhong_gong_container.active,
.palace_index_info_container.active {

    transform: translate(-50%, -50%) scale(1); /* 保持居中，放大 */
    opacity: 1;
    display: block;
}


.app_data_loading {

    display: none;

    /*最外层容器样式*/
    .wrap {
        width: var(--wrap-size);
        height: var(--wrap-size);
        margin: auto;
        position: relative;
      }
  
      /*包裹所有容器样式*/
      .cube {
        width: var(--cube-size);
        height: var(--cube-size);
        margin: 0 auto;
        transform-style: preserve-3d;
        transform: rotateX(-30deg) rotateY(-80deg);
        animation: rotatecube linear 20s infinite;
      }
  
      
  
      /* 图片容器 */
      .cube div {
        position: absolute;
        width: var(--cube-size);
        height: var(--cube-size);
        opacity: 0.8;
        transition: all 0.4s;
      }
  
      /* 图片样式 */
      .pic {
        width: 100%;
        height: 100%;
      }
  
      /* 外层立方体六个面 */
      .cube .out_front  { transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2)); }
      .cube .out_back   { transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 2)); }
      .cube .out_left   { transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2)); }
      .cube .out_right  { transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2)); }
      .cube .out_top    { transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2)); }
      .cube .out_bottom { transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2)); }
  
      /* 小正方体样式 */
      .cube span {
        display: block;
        width: calc(var(--cube-size) / 2);
        height: calc(var(--cube-size) / 2);
        position: absolute;
        top: calc(var(--cube-size) / 4);
        left: calc(var(--cube-size) / 4);
      }
  
      .cube .in_pic {
        width: 100%;
        height: 100%;
      }
  
      /* 内层立方体六个面 */
      .cube .in_front  { transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 4)); }
      .cube .in_back   { transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 4)); }
      .cube .in_left   { transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 4)); }
      .cube .in_right  { transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 4)); }
      .cube .in_top    { transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 4)); }
      .cube .in_bottom { transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 4)); }
  
      /* 鼠标悬停效果 */
      .cube:hover .out_front  { transform: rotateY(0deg) translateZ(var(--cube-size)); }
      .cube:hover .out_back   { transform: rotateY(180deg) translateZ(var(--cube-size)); }
      .cube:hover .out_left   { transform: rotateY(-90deg) translateZ(var(--cube-size)); }
      .cube:hover .out_right  { transform: rotateY(90deg) translateZ(var(--cube-size)); }
      .cube:hover .out_top    { transform: rotateX(90deg) translateZ(var(--cube-size)); }
      .cube:hover .out_bottom { transform: rotateX(-90deg) translateZ(var(--cube-size)); }
}

@keyframes rotatecube {
    from {
        transform: rotateX(0deg) rotateY(0deg);
    }
    to {
        transform: rotateX(360deg) rotateY(360deg);
    }
  }

.app_data_loading.active {

    display: block;
}

