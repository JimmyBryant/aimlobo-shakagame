body {

}

.game_flying_book {
    min-height: 100vh;
}

/* .book_cover {
    min-height: 100vh;
    background: rgba(225, 225, 225, 0.9);
} */

.birds-box {
    /* display: none; */
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: url('/image/game/flying_book/bg-birds.jpeg') no-repeat center center / cover;
}

.btn_start_game {
    /* animation: expand-1_1 1s infinite alternate; */
    padding: 0.75rem 1rem;
    font-size: 1.5rem;

    .bird-icon {
        animation: expand-1_3 0.5s infinite alternate;
    }
}

.btn_start_game, .li_content li {
    animation-name: fade-in;
    animation-duration: .8s;
    animation-fill-mode: forwards;
    opacity: 0
}

.li_content li:nth-child(1) {
    animation-delay: 1s
}

.li_content li:nth-child(2) {
    animation-delay: 2s
}

.li_content li:nth-child(3) {
    animation-delay: 3s
}

.li_content li:nth-child(4) {
    animation-delay: 4s
}

.li_content li:nth-child(5) {
    animation-delay: 5s
}

#btn-get {
    animation-delay: 6s
}

@keyframes fade-in {
    0% {
        transform: translateY(20%);
        opacity: 0
    }

    100% {
        transform: translateY(0);
        opacity: 1
    }
}

@-webkit-keyframes fade-in {
    0% {
        -webkit-transform: translateY(20%);
        transform: translateY(20%);
        opacity: 0
    }

    100% {
        -webkit-transform: translateY(0);
        transform: translateY(0);
        opacity: 1
    }
}

.book_content {
    
    position: relative;
    top: 10rem;

    .var_book_content {
        min-width: 10rem;
        color: white;
        background-color: rgba(225, 225, 225, 0.3);
    }
}


.btn_restart_game {
    background-color: rgba(119, 249, 182, .3);
    transition: background .5s ease-out;
}

.btn_restart_game:hover {

    color: white;
    background: #23a6d5;
}


.toggle-switch {
    /* width: 8rem; */
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  
  /*
     Size the label, and make the on and off parts sit on top
     of one another using positioning
  */
  
  label {
    width: fit-content;
    height: 1rem;
    line-height: 1rem;
    position: relative;
  }
  
  label span {
    /* position: absolute; */
  }
  
  /*
     remove the default styling of the checkbox using appearance
     and create the outer toggle area
  */
  
  input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    width: 2.75rem;
    height: 1.5rem;
    border-radius: 0.75rem;
    border: 2px solid black;
    background: #eee;
    transition: all 0.4s;
    position: relative;
  }
  
  /*
     style the ::before content to look like
     the inner toggle switch - the bit that moves
  */
  
  input[type="checkbox"]::before {
    width: 1rem;
    height: 1rem;
    border-radius: 0.5rem;
    background-color: black;
    content: '';
    position: absolute;
    top: 0.1rem;
    left: 8%;
    transition: all 0.4s;
  }
  
  /*
     change the outer background color and move the inner toggle switch
     when the checkbox is checked; use transitions for smooth animation
  */
  
  input[type="checkbox"]:checked {
    /* background-color: #ffaa00; */
    background-color: #fcbad3;
    transition: all 0.4s;
  }
  
  input[type="checkbox"]:checked::before {
    left: 50%;
    transition: all 0.4s;
  }
  
  /*
     cause the On and Off parts of the label to be visible when the checkbox is
     checked and unchecked, respectively
  */
  
  input[type="checkbox"] ~ label .on, input[type="checkbox"]:checked ~ label .off {
    /* opacity: 0; */
    display: none;
  }
  
  input[type="checkbox"] ~ label .off, input[type="checkbox"]:checked ~ label .on {
    /* opacity: 1; */
    display: block;
  }
  
  /*
     make the focus outline a bit more subtle on Chrome, rather than the
     default heavy blue outline
  */
  
  /* input:focus {
    outline: 1px solid black;
    
  } */
  }




